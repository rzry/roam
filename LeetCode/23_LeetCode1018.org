#+TITLE:     Leetcode-1018-被5整除的二进制前缀
#+AUTHOR:    rzry
#+EMAIL:     rzry36008@ccie.lol
#+DATE:      2020-09-16
#+LANGUAGE:  en
#+OPTIONS:   H:4 num:nil toc:2
#+SETUPFILE: ~/WorkBench/org/roam/org-html-themes/setup/theme-readtheorg.setup
#+begin_export html
<div class="right">
<a href="https://github.com/rzry" class="fa fa-github"> Edit on GitHub</a>
</div>
#+end_export
* ques
  #+BEGIN_SRC 
  给定由若干 0 和 1 组成的数组 A。
我们定义 N_i：从 A[0] 到 A[i] 的
第 i 个子数组被解释为一个二进制数
（从最高有效位到最低有效位）。


  返回布尔值列表 answer，
只有当 N_i 可以被 5 整除时，
答案 answer[i] 为 true，
否则为 false

  #+END_SRC
** 题目解释
  #+BEGIN_SRC 
  就是给定一个数组 比如 我给你一个 [0,1,0,1] 
 那么 它按照题目格式展开就是  0 , 01,010,0101
  然后把这个二进制转换为10进制 再去%5 
 看一下结果 如果整除就 true  
  
  #+END_SRC
** 题目答案
  #+BEGIN_SRC go
  func prefixesDivBy5(A []int) []bool {
    var temp int
    var res = make([]bool,len(A))
    for i, v:= range A{
        temp = temp<<1 + v
        if temp % 5 == 0{
            res[i] = true
        }
        temp %= 5
    }
    return res

}
  #+END_SRC
** 代码解析 . 
  #+BEGIN_SRC 
  只需关心最后一位. 所以不用转10进制 . 让它往左移位+遍历的value 然后去 %5
  
  #+END_SRC
* 第二种方式 
  #+BEGIN_SRC go
  func prefixesDivBy5(A []int) []bool {
    sum := 0
	result := make([]bool, 0)
	for _, v := range A {
        sum = (sum*2 + v) % 5
		if sum == 0 {
			result = append(result, true)
		} else {
			result = append(result, false)
		}
	}
    return result
}
  #+END_SRC
* 解析
  #+BEGIN_SRC 
  sum = (sum*2 + v) % 5  不是很懂这个  所以  这个题  先背着
  #+END_SRC
