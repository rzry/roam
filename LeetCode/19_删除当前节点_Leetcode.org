#+TITLE:     leetcode-删除当前节点
#+AUTHOR:    rzry
#+EMAIL:     rzry36008@ccie.lol
#+DATE:      2020-09-16
#+LANGUAGE:  en
#+OPTIONS:   H:4 num:nil toc:2
#+SETUPFILE: ../org-html-themes/setup/theme-readtheorg.setup
#+begin_export html
<div class="right">
<a href="https://github.com/rzry" class="fa fa-github"> Edit on GitHub</a>
</div>
#+end_export


题目地址 https://leetcode-cn.com/problems/delete-node-in-a-linked-list/submissions/

#+BEGIN_SRC 
输入: head = [4,5,1,9], node = 5
输出: [4,1,9]
解释: 给定你链表中值为 5 的第二个节点，那么在调用了你的函数之后，该链表应变为 4 -> 1 -> 9 
#+END_SRC
#+BEGIN_SRC go
 // Definition for singly-linked list.
  type ListNode struct {
      Val int
      Next *ListNode
  }
#+END_SRC

* 思路
 #+BEGIN_SRC 
 一般思路是 : 修改node 之前节点的next 指针 直接让他指向之后的节点
 因为我们现在只知道当权的节点node  所以 我们无法访问node 的前节点.也无法修改node前节点
 的next指针 所以我们必要将想删除的节点的值替换为它后面节点中的值 然后删除它的节点 

#+END_SRC
 
** 第二次的代码
   #+BEGIN_SRC go
   func deleteNode(node *ListNode) {
   *node = *node.Next
   }
   #+END_SRC
** 第一次的代码
   #+BEGIN_SRC go
   func deleteNode(node *ListNode) {
    if node != nil {
        if node.Next == nil {
            node = nil
        } else {
            node.Val = node.Next.Val
            node.Next = node.Next.Next
        }
    }
}
//这就是  下个节点的值 给  当前节点 
// 把  下下个节点 给 下个节点 
   #+END_SRC
   
